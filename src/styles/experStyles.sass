//* parallax effect in css
// $parallax-perspective: 8
// $parallax-perspective-px: 5px

// $parallax-distance: 3
// $parallax-distance-px: 3px
// $parallax-scale: ($parallax-perspective - $parallax-distance) / $parallax-perspective

// .parallax-container //* parrallax container
// -webkit-overflow-scrolling: touch //* inertia in safari mobile is disabled with this effect so this fixes the trick
//   // top: 30px
//   position: relative
//   width: 100%
//   height: 100vh
//   overflow-x: hidden
//   overflow-y: scroll
//   perspective: $parallax-perspective-px //* perspective is giving the depth range
//   perspective-origin: 0%
//   display: flex

// .background //* image for background but not backgroundImage that wraps all content
//   position: absolute
//   top: -300px
//   left: 0
//   width: 100%
//   height: 100%
//   transform: translateZ(-5px) //* translateZ is moving along the depth rangr (aka perspective)

// .foreground //*
//   margin-top: auto
//   margin-bottom: 50px
//   transform-origin: 10% 20px //starting point
//   transform: translateZ($parallax-distance-px) scale($parallax-scale) //*
//   z-index: 3

//   font-size: 36px
//   color: grey

//* markup
// import React from 'react'
// import '../styles/experStyles.sass';

// const ExperPg = () => {
//   return (
//     <div className="parallax-container">
//       <div className="background">
//         <img src={require('../assets/croppedVerticallyFlowerPattern.jpg')} alt="" className="backrgoundImage" />
//       </div>
//       <div className="foreground">
//         <div className="foregroundContent">
//           parallaxing!!
//         </div>
//       </div>
//     </div>
//   )
// }

// export default ExperPg
